syntax = "proto3";
package NetworkMessages;

enum MessageType
{
	ChatDebug = 0;
	ChatBasic = 1;
	ChatReservedTo = 9;

	InputDebug = 10;
	InputAction = 11;
	InputMovementDirection = 12;
	InputLookDelta = 13;
	InputLookDirection = 14;
	InputFullCapture = 15;
	InputReservedTo = 19;

	ServerAlertDebug = 20;
	ServerAlertNewPlayer = 21;
	ServerAlertReservedTO = 29;
	
	ServerCommandDebug = 30;
	ServerCommandSpawnPlayer = 31;
	ServerCommandLaunchGame = 32;
	ServerCommandReservedTo = 39;

	PlayerStateDebug = 40;
	PlayerStatePosition = 41;
}

enum ActionType {
	Jump = 0;
	Sprint = 1;
	Crouch = 2;
	Prone = 3;
	Walk = 4;
	LeanLeft = 5;
	LeanRight = 6;

	OpenInventory = 20;
	Interact = 21;

	Fire = 30;
	Aim = 31;
	Scope = 32;
	Reload = 33;
}
enum ActionState {
	released = 0;
	pressed = 1;
}

enum AxisType {
	movementDirection = 0;
	lookDirection = 1;
	lookDelta = 2;
}

message YADRNetworkMessageWrapper
{
	MessageType type = 1;
	oneof payload {
		ChatDebugMessage chatDebug = 990;
		ChatBasicMessage chatBasic = 991;

		InputDebugMessage inputDebug = 9910;
		InputActionMessage inputAction = 2;
		InputMovementDirectionMessage inputMovementDirection = 3;
		InputLookDeltaMessage inputLookDelta = 9913;
		InputLookDirectionMessage inputLookDirection = 5;
		InputFullCaptureMessage inputFullCapture = 6;

		ServerAlertDebugMessage serverAlertDebug = 9920;
		ServerAlertNewPlayerMessage serverAlertNewPlayer = 9921;
		
		ServerCommandDebugMessage serverCommandDebug = 9930;
		ServerCommandSpawnPlayerMessage serverCommandSpawnPlayer = 9931;
		ServerCommandLaunchGameMessage serverCommandLaunchGame = 9932;

		PlayerStateDebugMessage playerStateDebug = 9940;
		PlayerStatePositionMessage playerStatePosition = 7;
	}
}

message Identity {
	string name = 1;
	oneof identity {
		int64 steamID = 2;
		int64 ipAddress = 3;
	}
}

message ChatString {
	string text = 1;
}

message ChatDebugMessage {
	Identity sender = 1;
	ChatString chatString = 2;
}

message ChatBasicMessage {
	Identity sender = 1;
	ChatString chatString = 2;
}

message ActionMessage{
	ActionType actionType = 1;
	ActionState actionState = 2;
}

message InputDebugMessage {
	Identity inputOf = 1;
	string debug = 2;
}

message InputActionMessage {
	Identity inputOf = 1;
	ActionMessage action = 2;
}

message DirectionVector {
	float x = 1;
	float y = 2;
	optional float z = 3;
}

message InputMovementDirectionMessage {
	Identity inputOf = 1;
    DirectionVector direction = 2;
}

message InputLookDeltaMessage {
	Identity inputOf = 1;
	DirectionVector delta = 2;
}

message InputLookDirectionMessage {
	Identity inputOf = 1;
	DirectionVector direction = 2;
}

message InputFullCaptureMessage {
	Identity inputOf = 1;
	DirectionVector movementDirection = 2;
	repeated ActionMessage actions = 3;
	DirectionVector lookDelta = 4;
	DirectionVector lookDirection = 5;
}

message Position {
	float X =1;
	float Y =2;
	float Z=3;
}

message PlayerStateDebugMessage {

}

message PlayerStatePositionMessage {
	Identity playerIdentity = 1;
	Position position = 2;
}

message PlayerStateFullCaptureMessage {
	Identity stateOf = 1;
}

message ServerAlertDebugMessage {
	int64 mode = 1;
}

message ServerAlertNewPlayerMessage{
	Identity newPlayer = 1;
}

message ServerCommandDebugMessage {
	int64 mode = 1;
}

message ServerCommandSpawnPlayerMessage {
	Identity player = 1;
	Position position = 2;
}

message ServerCommandLaunchGameMessage {
	int64 mode = 1;
}
